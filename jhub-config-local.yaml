proxy:
  https:
    enabled: false

hub:
  config:
    JupyterHub:
      baseUrl: "/jupyter"
      tornado_settings:
        xheaders: true

    JupyterHubCuller:
      enabled: true
      timeout: 3600 # 1 hour
      every: 6000 # 10 minutes
      concurrency: 10
    Authenticator:
      admin_users:
        - shashikant
        - yuri
        - adnan
        - quint
        - goncalo
        - ana
        - kilian
        - edouard
        - massimiliano
        - enol
    JupyterHub:
      authenticator_class: dummy
  extraConfig:
    enable-api-accces: |
      c.KubeSpawner.automount_serviceaccount_token = True
    allow-root: |
      from kubespawner import KubeSpawner
      def modify_pod(spawner: KubeSpawner, pod):
          pod.spec.containers[0].security_context = {
              "runAsUser": 0,
              "runAsGroup": 0,
              "privileged": True,
              "allowPrivilegeEscalation": True,
              "capabilities": {
                  "add": ["ALL"]
              }
          }
          return pod
      c.KubeSpawner.modify_pod_hook = modify_pod
    notebook-xorigin: |
      c.NotebookApp.allow_origin = '*'
      c.NotebookApp.disable_check_xsrf = True

singleuser:
  image:
    name: jupyter/datascience-notebook
    tag: latest
  
  extraEnv:
    GRANT_SUDO: "yes"
    NOTEBOOK_ARGS: "--allow-root"
    # JUPYTER_ALLOW_ORIGIN: "*"
    # JUPYTER_ENABLE_LAB: "yes"
    # JUPYTER_TOKEN: ""
    # JUPYTERHUB_SINGLEUSER_APP: "notebook"
    # JUPYTER_CONFIG_DIR: "/etc/jupyter"

  uid: 0
  fsGid: 0
  cmd:
    - bash
    - -c
    - |
      sudo apt update && sudo apt install -y jq

      if [ ! -f /home/jovyan/GD_EcoJupyter_Tutorial.ipynb ]; then
        cp /srv/starter-notebooks/GD_EcoJupyter_Tutorial.ipynb /home/jovyan/GD_EcoJupyter_Tutorial.ipynb
      fi
      chmod 777 /home/jovyan/GD_EcoJupyter_Tutorial.ipynb

      if [ ! -f /home/jovyan/GD_EcoJupyter_StressTest.ipynb ]; then
        cp /srv/stress-notebook/GD_EcoJupyter_StressTest.ipynb /home/jovyan/GD_EcoJupyter_StressTest.ipynb
      fi
      chmod 777 /home/jovyan/GD_EcoJupyter_StressTest.ipynb

      if [ ! -d /usr/local/etc/jupyter ]; then
        mkdir -p /usr/local/etc/jupyter
      fi

      if [ ! -f /usr/local/etc/jupyter/notebook_tracker_experimentid.py ]; then
        cp /srv/track-notebook/notebook_tracker_experimentid.py /usr/local/etc/jupyter/notebook_tracker_experimentid.py
      fi

      if ! grep -q "import notebook_tracker_experimentid" /usr/local/etc/jupyter/jupyter_server_config.py 2>/dev/null; then
        echo "import sys" >> /usr/local/etc/jupyter/jupyter_server_config.py
        echo "sys.path.append('/srv/track-notebook')" >> /usr/local/etc/jupyter/jupyter_server_config.py
        echo "import notebook_tracker_experimentid" >> /usr/local/etc/jupyter/jupyter_server_config.py
      fi

      # For the notebook tracker
      pip install prometheus_api_client

      # Create experiment logs directory
      mkdir -p /home/jovyan/experiment_logs
      chmod 777 /home/jovyan/experiment_logs

      git clone https://github.com/g-uva/egi-ice-net-example.git /home/jovyan/icenet-notebook
      chmod -R 777 /home/jovyan/icenet-notebook
      chmod +x /home/jovyan/icenet-notebook/install-dependencies.sh
      git config --global --add safe.directory /home/jovyan/icenet-notebook

      if [ ! -d /home/jovyan/shashikant-notebook/ ]; then
        mkdir -p /home/jovyan/
        cp -r /srv/shashikant-notebook/ /home/jovyan/shashikant-notebook
      fi

      echo "jovyan ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/jovyan && \
      chmod 0440 /etc/sudoers.d/jovyan

      exec start.sh jupyterhub-singleuser
      export PROJECT_ID=($kubernetes-service)
  
  extraPodConfig:
    automountServiceAccountToken: true

  storage:
    type: dynamic
    homeMountPath: /home/jovyan
    # capacity: 5Gi
    # dynamic:
    #   storageClass: standard
    #   pvcNameTemplate: claim-{username}
    #   storageAccessModes:
    #     - ReadWriteOnce

    extraVolumes:
      - name: sys
        hostPath:
          path: /sys
          type: Directory
      - name: starter-notebook
        configMap:
          name: starter-notebook
      - name: stress-notebook
        configMap:
          name: stress-notebook
      - name: track-notebook
        configMap:
          name: track-notebook
      # - name: shashikant-notebook-pvc
      #   persistentVolumeClaim:
      #     claimName: shashikant-notebook-pvc
      # - name: shashikant-notebook-example
      #   configMap:
      #     name: shashikant-notebook

    extraVolumeMounts:
      - name: sys
        mountPath: /sys
        readOnly: true
      - name: starter-notebook
        mountPath: /srv/starter-notebooks
        readOnly: true
      - name: stress-notebook
        mountPath: /srv/stress-notebook
        readOnly: true
      - name: track-notebook
        mountPath: /srv/track-notebook
        readOnly: true
      # - name: shashikant-notebook-pvc
      #   mountPath: /srv/shashikant-notebook
      #   readOnly: true
