# ─────────────────────────────────────────────────────────────
# 1) HTTP → HTTPS
# ─────────────────────────────────────────────────────────────
server {
    listen      80;
    server_name mc-a4.lab.uvalight.net;
    return      301 https://$host$request_uri;
}

# ─────────────────────────────────────────────────────────────
# 2) HTTPS vhost for Grafana & JupyterHub
# ─────────────────────────────────────────────────────────────
server {
    listen       443 ssl http2;
    server_name  mc-a4.lab.uvalight.net;

    ##––– SSL (Certbot managed) –––
    ssl_certificate     /etc/letsencrypt/live/mc-a4.lab.uvalight.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mc-a4.lab.uvalight.net/privkey.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;


    # This is a temporary solution
    location / {
        # pass the /prometheus/ prefix straight through
        proxy_pass         http://127.0.0.1:8000/;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        # WebSocket support
        proxy_http_version 1.1;
        # proxy_set_header   Upgrade   $http_upgrade;
        # proxy_set_header   Connection "upgrade";

        # JupyterHub knows its /jupyter/ base, so no need to rewrite Location:
        #proxy_redirect     off;
    }


    # ──────────────────────────────────────────────────────────
    # A) Redirect bare “/” → “/grafana/”
    # ──────────────────────────────────────────────────────────
    # location = / {
    #     return 302 /jupyter/;
    # }

    # location = /helm {
    #   return 301 /helm/;
    # }

    # ──────────────────────────────────────────────────────────
    # B) Redirect “/jupyter” → “/jupyter/”
    # ──────────────────────────────────────────────────────────
    # location = /jupyter {
    #     return 301 /jupyter/;
    # }

    # ──────────────────────────────────────────────────────────
    # C) JupyterHub @ /jupyter/
    # ──────────────────────────────────────────────────────────
    # location ^~ /jupyter/ {
    #     rewrite ^/jupyter/(.*)$ /$1 break;
    #     # pass the /jupyter/ prefix straight through
    #     proxy_pass         http://127.0.0.1:8001/;
    #     # proxy_pass         http://127.0.0.1:8000/;
    #     proxy_set_header   Host              $host;
    #     proxy_set_header   X-Real-IP         $remote_addr;
    #     proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    #     proxy_set_header   X-Forwarded-Proto $scheme;
    #     proxy_set_header   X-Forwarded-Prefix    /jupyter/;

        # WebSocket support
    #     proxy_http_version 1.1;
    #     proxy_set_header   Upgrade   $http_upgrade;
    #     proxy_set_header   Connection "upgrade";

    #     proxy_redirect     /hub/                 /jupyter/hub/;
    # }

    # location ^~ /helm/ {
    #     # strip off the /helm/ prefix before sending upstream
    #     rewrite ^/helm/(.*)$ /$1 break;

    #     # include the trailing slash so that nginx replaces the entire path
    #     proxy_pass         http://127.0.0.1:8001/;

    #     # tell JupyterHub where it lives
    #     proxy_set_header   Host              $host;
    #     proxy_set_header   X-Real-IP         $remote_addr;
    #     proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    #     proxy_set_header   X-Forwarded-Proto $scheme;
    #     proxy_set_header   X-Forwarded-Prefix /helm/;

    #     # websocket support
    #     proxy_http_version 1.1;
    #     proxy_set_header   Upgrade           $http_upgrade;
    #     proxy_set_header   Connection        "upgrade";

    #     # fix redirects from /hub/ → /jupyter/hub/
    #     proxy_redirect     /hub/             /helm/hub/;
    # }

    location ^~ /prometheus/ {
        # pass the /prometheus/ prefix straight through
        proxy_pass         http://127.0.0.1:9090/;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

    # WebSocket support
    proxy_http_version 1.1;
    # proxy_set_header   Upgrade   $http_upgrade;
    # proxy_set_header   Connection "upgrade";

        # JupyterHub knows its /jupyter/ base, so no need to rewrite Location:
        #proxy_redirect     off;
    }

    # location ^~ /prometheus-helm/ {
    #     # pass the /prometheus/ prefix straight through
    #     proxy_pass         http://127.0.0.1:9091/;
    #     proxy_set_header   Host              $host;
    #     proxy_set_header   X-Real-IP         $remote_addr;
    #     proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    #     proxy_set_header   X-Forwarded-Proto $scheme;

    #     # WebSocket support
    #     proxy_http_version 1.1;
    #     # proxy_set_header   Upgrade   $http_upgrade;
    #     # proxy_set_header   Connection "upgrade";

    #     # JupyterHub knows its /jupyter/ base, so no need to rewrite Location:
    #     #proxy_redirect     off;
    # }

    # ──────────────────────────────────────────────────────────
    # D) Grafana @ /grafana/
    # ──────────────────────────────────────────────────────────
    # location ^~ /grafana/ {
    #     # pass the /grafana/ prefix through intact
    #     proxy_pass         http://127.0.0.1:3000;
    #     proxy_set_header   Host              $host;
    #     proxy_set_header   X-Real-IP         $remote_addr;
    #     proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    #     proxy_set_header   X-Forwarded-Proto $scheme;

    #     # Rewrite any Grafana Location: headers back under /grafana/
    #     proxy_redirect     http://127.0.0.1:3000/ /grafana/;
    # }

    # location ^~ /grafana-helm/ {
    #     # pass the /grafana/ prefix through intact
    #     proxy_pass         http://127.0.0.1:3001;
    #     proxy_set_header   Host              $host;
    #     proxy_set_header   X-Real-IP         $remote_addr;
    #     proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    #     proxy_set_header   X-Forwarded-Proto $scheme;

    #     # Rewrite any Grafana Location: headers back under /grafana/
    #     proxy_redirect     http://127.0.0.1:3001/ /grafana/;
    # }

    # ──────────────────────────────────────────────────────────
    # E) Catch-all: everything else → 404
    # ──────────────────────────────────────────────────────────
    # location / {
    #     return 404;
    # }
}